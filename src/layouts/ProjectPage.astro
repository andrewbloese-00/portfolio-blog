---
import type { CollectionEntry, CollectionKey } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";

type Props = CollectionEntry<'project'>['data']
const { title, description, stack, thumbnail,  } = Astro.props
// optionals are images, git_link, deployment_link
const images = Astro.props.images || [thumbnail]; //default image carousel to at least one image.
---


<html lang="en">
    <head>
        <BaseHead title={title} description={description}/>
        <style>
            main {
				/* width: calc(100% - 2em); */
				max-width: 100%;
				margin: 0;
			}
            article { 
                width: 100%;
                display: flex;
                flex-direction: column;
                align-items: center;    
                justify-content: center;
            }

            .article h2 { 
                font-size: 1.5rem;
            }
			.image-carousel {
                min-width: 100%;
                width: fit-content;
                display: flex;
                height: 50vw;
                overflow-x: auto;
                height: 50vw;
            
                mask: linear-gradient(
                    90deg, transparent, white 5% 95%, transparent
                    );
                    -webkit-mask: linear-gradient(90deg, transparent, white 5% 95%, transparent);
                
                gap: 20px;
                flex-wrap: nowrap;
            }

            .image-carousel a { 
                display: contents;
            }
            .image-carousel img { 
                margin-left: 1rem;
                
        
            }
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}

            .centered { 
                justify-content: center;
            }

            .stack { 
                list-style: none;
                display: flex;
                gap: 20px;
                padding: 0;
            }
            .stack li { 
                border: 4px solid black;
                border-radius: 8px;
                font-size: 1.2rem;
                padding: 0.5ch 1ch;
            }

            .visit-link { 
                background-color: royalblue;
                color: white;
                padding: 10px;
                border-radius: 10px;
                text-decoration: none;
                transition: all 0.3s ease;
            }
            .visit-link:hover { 
                box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.5);
            }
            .visit-links { 
                display: flex;
                gap: 20px;
                align-items: center;
                justify-content: flex-start;

            }

        </style>
    </head>
    <body>
        <Header/>
        <main>
            <div class="prose">
                <h1>{title}</h1>

                <ul class="stack">
                    {stack.map((label:string)=><li>{label}</li>)}
                    
                </ul>
          

                <hr/>
            </div>
            <article>
                <div class={`image-carousel ${images.length === 1 ? "centered" : ""}`}>
                    {images && images.map((url:string,i:number) => <a href={url} target="_blank"><img src={url} alt={`${title} ${i+1}/${images.length}`}/></a>)}
                </div>
                <div class="prose">
                    <slot/>
                    <div class="visit-links">
                        {Astro.props.deployment_link && <a href={Astro.props.deployment_link} class="visit-link">View Deployed</a>}
                        {Astro.props.git_link && <a href={Astro.props.deployment_link} class="visit-link">View On GitHub</a>}
                    </div>
                </div>
                
            </article>
        </main>
        <Footer />
    </body>



</html>

